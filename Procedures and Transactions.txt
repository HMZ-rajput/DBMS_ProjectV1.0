---------------------Vehicle
get car:
create procedure getVehicle
as
begin
select * from Vehicles
end

add car:
create procedure addVehicle
@Make nvarchar(30),
@Model nvarchar(30),
@Year int,
@Mileage int
as
begin
insert into Vehicles (Make,Model,Year,Mileage,Status,BuyDate) values(@Make,@Model,@Year,@Mileage,'NOT REPAIR',getdate())
end

delete car:
create procedure delVehicle
@VehicleID int
as begin
if exists (select * from Vehicles where VehicleID=@VehicleID)
begin
	delete from Vehicles where VehicleID=@VehicleID
end
end

--Add Car altered
alter procedure addVehicle
@Make nvarchar(30),
@Model nvarchar(30),
@Year int,
@Mileage int,
@Cost int,
@VendorID int
as
begin
insert into Vehicles (Make,Model,Year,Mileage,Status,BuyDate,Cost,VendorID) values(@Make,@Model,@Year,@Mileage,'NOT REPAIR',getdate(),@Cost,@VendorID)
end


--Upadte Vehicle

create procedure updateVehicleMake
@VehicleID int,
@Make nvarchar(30)
as
begin
if exists (select * from Vehicles where VehicleID=@VehicleID)
begin
	update Vehicles set Make=@Make where VehicleID=@VehicleID
end
end

create procedure updateVehicleModel
@VehicleID int,
@Model nvarchar(30)
as
begin
if exists (select * from Vehicles where VehicleID=@VehicleID)
begin
	update Vehicles set Model=@Model where VehicleID=@VehicleID
end
end

create procedure updateVehicleYear
@VehicleID int,
@Year int
as
begin
if exists (select * from Vehicles where VehicleID=@VehicleID)
begin
	update Vehicles set Year=@Year where VehicleID=@VehicleID
end
end

create procedure updateVehicleMileage
@VehicleID int,
@Mileage int
as
begin
if exists (select * from Vehicles where VehicleID=@VehicleID)
begin
	update Vehicles set Mileage=@Mileage where VehicleID=@VehicleID
end
end

create procedure updateVehicleCost
@VehicleID int,
@Cost int
as
begin
if exists (select * from Vehicles where VehicleID=@VehicleID)
begin
	update Vehicles set Cost=@Cost where VehicleID=@VehicleID
end
end

create procedure updateVehicleVendor
@VehicleID int,
@VendorID int
as
begin
if exists (select * from Vehicles where VehicleID=@VehicleID)
begin
	update Vehicles set VendorID=@VendorID where VehicleID=@VehicleID
end
end

-------------------------Spare Parts
--crud for spareparts
create procedure addSparePart
	@partName nvarchar(30),
	@partDescription nvarchar(100),
	@partCost int
as
begin
	SET NOCOUNT ON;
		insert into SpareParts values (@partName,@partDescription,@partCost)
end

create procedure updateSparePart
	@partID int,
	@partName nvarchar(30),
	@partDescription nvarchar(100),
	@partCost int
as
begin
	SET NOCOUNT ON;
		update SpareParts
		set PartName = @partName, PartDescription = @partDescription, PartCost = @partCost where PartID = @partID 
end

create procedure deleteSparePart
	@partID int
as
begin
	SET NOCOUNT ON;
		delete from SpareParts where PartID = @partID 
end

create procedure readSparePart
as
begin
	SET NOCOUNT ON;
		select * from SpareParts
end


----------------------------------Vendors
--Add Vendor
create procedure addVendors
@Name nvarchar(30),
@Address nvarchar(30),
@Phone nvarchar(30)
as
begin
insert into Vendors values(@Name,@Address,@Phone)
end

--get Vendors
create procedure getVendors
as
begin
select * from Vendors
end

--delete Vendors
create procedure delVendor
@VendorID int
as begin
if exists (select * from Vendors where VendorID=@VendorID)
begin
	delete from Vendors where VendorID=@VendorID
end
end

--update vendors
create procedure updateVendorName
@VendorID int,
@Name nvarchar(30)
as
begin
if exists (select * from Vendors where VendorID=@VendorID)
begin
	update Vendors set Name=@Name where VendorID=@VendorID
end
end

create procedure updateVendorAddress
@VendorID int,
@Address nvarchar(30)
as
begin
if exists (select * from Vendors where VendorID=@VendorID)
begin
	update Vendors set Address=@Address where VendorID=@VendorID
end
end

create procedure updateVendorPhone
@VendorID int,
@Phone nvarchar(30)
as
begin
if exists (select * from Vendors where VendorID=@VendorID)
begin
	update Vendors set Phone=@Phone where VendorID=@VendorID
end
end


------------------Technicians

--get Tech
create procedure getTechnician
as
begin
select * from Technicians
end

--add Tech
create procedure addTechnician
@Name nvarchar(30),
@Address nvarchar(50),
@Phone nvarchar(20)
as
begin
insert into Technicians values(@Name,@Address,@Phone)
end

--del Tech
create procedure delTechnician
@TechnicianID int
as
begin
if exists(select * from Technicians where TechnicianID=@TechnicianID)
begin
	delete from Technicians where TechnicianID=@TechnicianID
end
end

--update Tech
create procedure updateTechnicianName
@TechnicianID int,
@Name nvarchar(30)
as
begin
if exists (select * from Technicians where TechnicianID=@TechnicianID)
begin
	update Technicians set Name=@Name where TechnicianID=@TechnicianID
end
end

create procedure updateTechnicianAddress
@TechnicianID int,
@Address nvarchar(50)
as
begin
if exists (select * from Technicians where TechnicianID=@TechnicianID)
begin
	update Technicians set Address=@Address where TechnicianID=@TechnicianID
end
end

create procedure updateTechnicianPhone
@TechnicianID int,
@Phone nvarchar(20)
as
begin
if exists (select * from Technicians where TechnicianID=@TechnicianID)
begin
	update Technicians set Phone=@Phone where TechnicianID=@TechnicianID
end
end


------------------Customer
--Add Customer
create procedure addCustomers
@Name nvarchar(30),
@Address nvarchar(30),
@Phone nvarchar(30)
as
begin
insert into Customers values(@Name,@Address,@Phone)
end

--get Customers
create procedure getCustomers
as
begin
select * from Customers
end

--delete Customers
create procedure delCustomer
@CustomerID int
as begin
if exists (select * from Customers where CustomerID=@CustomerID)
begin
	delete from Customers where CustomerID=@CustomerID
end
end

--update Customers
create procedure updateCustomerName
@CustomerID int,
@Name nvarchar(30)
as
begin
if exists (select * from Customers where CustomerID=@CustomerID)
begin
	update Customers set Name=@Name where CustomerID=@CustomerID
end
end

create procedure updateCustomerAddress
@CustomerID int,
@Address nvarchar(30)
as
begin
if exists (select * from Customers where CustomerID=@CustomerID)
begin
	update Customers set Address=@Address where CustomerID=@CustomerID
end
end

create procedure updateCustomerPhone
@CustomerID int,
@Phone nvarchar(30)
as
begin
if exists (select * from Customers where CustomerID=@CustomerID)
begin
	update Customers set Phone=@Phone where CustomerID=@CustomerID
end
end

-----------------------SpareParts
create procedure updateSparePartsName
@PartID int,
@PartName nvarchar(30)
as
begin
if exists(select 1 from SpareParts where PartID=@PartID)
begin
	update SpareParts set PartName=@PartName where PartID=@PartID
end
end

create procedure updateSparePartsDesc
@PartID int,
@Description nvarchar(100)
as
begin
if exists(select 1 from SpareParts where PartID=@PartID)
begin
	update SpareParts set PartDescription=@Description where PartID=@PartID
end
end

create procedure updateSparePartsCost
@PartID int,
@Cost int
as
begin
if exists(select 1 from SpareParts where PartID=@PartID)
begin
	update SpareParts set PartCost=@Cost where PartID=@PartID
end
end


--Employee


------------------Employee

--Add Employee
create procedure addEmployee
@Name nvarchar(30),
@Address nvarchar(30),
@Phone nvarchar(30),
@CommisionPercentage int
as
begin
insert into Employee values(@Name, @Address, @Phone, @CommisionPercentage)
end

--get Employees
create procedure getEmployee
as
begin
select* from Employee
end

--delete Employees
create procedure delEmployee
@EmployeeID int
as begin
if exists(select * from Employee where EmployeeID = @EmployeeID)
begin
    delete from Employee where EmployeeID = @EmployeeID
end
end

--update Employees
create procedure updateEmployeeName
@EmployeeID int,
@Name nvarchar(30)
as
begin
if exists(select * from Employee where EmployeeID = @EmployeeID)
begin
    update Employee set Name = @Name where EmployeeID = @EmployeeID
end
end

create procedure updateEmployeeCommission
@EmployeeID int,
@CommisionPercentage int
as
begin
if exists(select * from Employee where EmployeeID = @EmployeeID)
begin
    update Employee set CommisionPercentage = @CommisionPercentage where EmployeeID = @EmployeeID
end
end

create procedure updateEmployeeAddress
@EmployeeID int,
@Address nvarchar(30)
as
begin
if exists(select * from Employee where EmployeeID = @EmployeeID)
begin
    update Employee set Address = @Address where EmployeeID = @EmployeeID
end
end

create procedure updateEmployeePhone
@EmployeeID int,
@Phone nvarchar(30)
as
begin
if exists(select * from Employee where EmployeeID = @EmployeeID)
begin
    update Employee set Phone = @Phone where EmployeeID = @EmployeeID
end
end
--------------------------------6/11-23 By Hamza the Great
--------------Repairs and RepairDetails
--Get Repair of vehicle
create procedure getRepair
@TechnicianID int
as
begin
select * from Repairs where TechnicianID=@TechnicianID
end

--Get RepairDetails of vehicles of a tech
create procedure getRepairDetails
@TechnicianID int
as
begin
select * from RepairDetails rd inner join Repairs r on rd.RepairID=r.RepairID where r.TechnicianID=@TechnicianID
end

--get AvailaleVehicles which are not repaired
create procedure getAvailaleVehicles
as
begin
select * from Vehicles where Status='NOT REPAIR'
end


----------------------By Hamza 6/18/23

--Technician will select vehicle he want to repair
create procedure startVehicleRepair
@TechnicianID int,
@VehicleID int
as
begin
insert into Repairs (VehicleID,TechnicianID) values(@VehicleID,@TechnicianID)
update Vehicles set Status='REPAIRING' where VehicleID=@VehicleID
end

--Fixed startVehicleRepair to prevent technician from selecting same car multiple times
alter procedure startVehicleRepair
@TechnicianID int,
@VehicleID int
as
begin
if not exists(select 1 from Repairs r inner join Technicians t on r.TechnicianID=t.TechnicianID where r.VehicleID=@VehicleID)
begin
insert into Repairs (VehicleID,TechnicianID) values(@VehicleID,@TechnicianID)
update Vehicles set Status='REPAIRING' where VehicleID=@VehicleID
end
end

--Remove Vehicle From Repairs and RepairDetails that Technician is working on
create procedure VehicleRepairUpdate
@TechnicianID int,
@VehicleID int
as
begin
if exists(select 1 from Repairs r inner join Technicians t on r.TechnicianID=t.TechnicianID where r.VehicleID=@VehicleID)
begin
	delete from RepairDetails where RepairID=(select r.RepairID from Repairs r inner join Technicians t on r.TechnicianID=t.TechnicianID where r.VehicleID=@VehicleID)
	delete from Repairs where TechnicianID=@TechnicianID
	update Vehicles set Status='NOT REPAIR' where VehicleID=@VehicleID 	
end
end

--Fixed getRepair to only show relevant info to Technician
alter procedure getRepair
@TechnicianID int
as
begin
select v.VehicleID,v.Make,v.Model,v.Year,v.Status,r.RepairDescription,r.RepairCost,r.TechnicianCharges from Repairs r inner join Vehicles v on r.VehicleID=v.VehicleID where r.TechnicianID=@TechnicianID
end

--Get Vehicles that technician is working on
create procedure getTechnicianVehicles
@TechnicianID int
as
begin
select v.VehicleID,v.Make,v.Model from Repairs r inner join Vehicles v on r.VehicleID=v.VehicleID where r.TechnicianID=@TechnicianID and v.Status='REPAIRING'
end

--get Vehicle Repair details
create procedure getVehicleRepairDetails
@VehicleID int
as
begin
if exists(select 1 from RepairDetails rd inner join Repairs r on rd.RepairID=r.RepairID where r.VehicleID=@VehicleID)
begin
	select rd.rdID as [RepairDetail ID],sp.PartName,sp.PartDescription,sp.PartCost,rd.Quantity,sum(sp.PartCost*rd.Quantity) as Total from 
	SpareParts sp inner join  RepairDetails rd on sp.PartID=rd.PartID 
	inner join Repairs r on rd.RepairID=r.RepairID 
	where r.VehicleID=@VehicleID group by rd.rdID,sp.PartName,sp.PartCost,rd.Quantity,sp.PartDescription
end
end

--update Repair Detail
create procedure updateRepairDetail
@rdID int,
@Quantity int
as
begin
update RepairDetails set Quantity=@Quantity where rdID=@rdID
end

--Delete From Repair Details
create procedure deleteRepairDetail
@rdID int
as
begin
delete from RepairDetails where rdID=@rdID
end


--Insert into Repair Detils when part is inserted
create procedure insertPartRepairDetail
@VehicleID int,
@PartID int,
@Quantity int
as
begin
insert into RepairDetails values((select RepairID from Repairs where VehicleID=@VehicleID),@PartID,@Quantity)
end


--When vehicle is repaired all the charges are calculated
create procedure MarkVehicleRepaired
@VehicleID int,
@Description nvarchar(100),
@Charges int
as
begin
update Repairs set RepairDescription=@Description, 
RepairCost=(select top 1 sum(sp.PartCost*rd.Quantity) as Total from 
			SpareParts sp inner join  RepairDetails rd on sp.PartID=rd.PartID 
			inner join Repairs r on rd.RepairID=r.RepairID 
			where r.VehicleID=2014 group by rollup(sp.PartCost,rd.Quantity) order by Total desc), 
CompletionDate=getdate(), 
TechnicianCharges=@Charges 
where VehicleID=@VehicleID

update Vehicles set Cost=(select RepairCost+TechnicianCharges from Repairs where VehicleID=@VehicleID), Status='REPAIRED' where VehicleID=@VehicleID
end